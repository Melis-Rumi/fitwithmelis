# Generated by Django 5.1.5 on 2025-02-09 02:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CardioExercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='MuscleGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='TrainingDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.CharField(max_length=20)),
                ('description', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255)),
                ('age', models.IntegerField()),
                ('contact_number', models.CharField(max_length=15)),
                ('preferred_contact_method', models.CharField(max_length=50)),
                ('current_weight', models.FloatField()),
                ('goal', models.CharField(max_length=50)),
                ('training_experience', models.CharField(max_length=50)),
                ('specific_goals', models.TextField()),
                ('obstacles', models.TextField()),
                ('physique_rating', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CardioRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sets', models.IntegerField()),
                ('duration_minutes', models.FloatField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.cardioexercise')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='DietRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_calories', models.FloatField()),
                ('protein_intake', models.FloatField()),
                ('carbs_intake', models.FloatField()),
                ('fat_intake', models.FloatField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='MealPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('meal_image', models.ImageField(upload_to='meal_images/')),
                ('comments', models.TextField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='Exercise',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('muscle_group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.musclegroup')),
            ],
        ),
        migrations.CreateModel(
            name='Progress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('weight', models.FloatField(blank=True, null=True)),
                ('waist_size', models.FloatField(blank=True, null=True)),
                ('glute_size', models.FloatField(blank=True, null=True)),
                ('chest_size', models.FloatField(blank=True, null=True)),
                ('arm_size_left', models.FloatField(blank=True, null=True)),
                ('arm_size_right', models.FloatField(blank=True, null=True)),
                ('quad_size_left', models.FloatField(blank=True, null=True)),
                ('quad_size_right', models.FloatField(blank=True, null=True)),
                ('body_fat_percentage', models.FloatField(blank=True, null=True)),
                ('bmi', models.FloatField(blank=True, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseDay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_name', models.CharField(max_length=255)),
                ('sets', models.IntegerField()),
                ('reps', models.CharField(max_length=50)),
                ('order', models.IntegerField(default=0)),
                ('training_day', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exercises', to='clients.trainingday')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingProgram',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('program_id', models.AutoField(primary_key=True, serialize=False)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TrainingRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('sets', models.IntegerField()),
                ('reps', models.IntegerField()),
                ('weight', models.FloatField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.client')),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='clients.exercise')),
            ],
        ),
        migrations.CreateModel(
            name='TrainingWeek',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('week_number', models.IntegerField()),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='weeks', to='clients.trainingprogram')),
            ],
            options={
                'unique_together': {('program', 'week_number')},
            },
        ),
        migrations.AddField(
            model_name='trainingday',
            name='week',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='days', to='clients.trainingweek'),
        ),
        migrations.AlterUniqueTogether(
            name='trainingday',
            unique_together={('week', 'day_of_week')},
        ),
    ]
